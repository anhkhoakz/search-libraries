name: Buidl

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Package
      run: |
        mkdir -p release
        cp target/release/search release/
    - name: Release
      uses: ncipollo/release-action@v1
      id: create_release
      with:
        artifacts: ./release/search
        artifactContentType: application/octet-stream
        allowUpdates: true
        replacesArtifacts: true
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/search
        asset_name: search-linux
        asset_content_type: application/octet-stream

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Package
      run: |
        mkdir release
        Copy-Item target/release/search.exe release/
    - name: Release
      uses: ncipollo/release-action@v1
      id: create_release
      with:
        artifacts: ./release/search.exe
        artifactContentType: application/octet-stream
        allowUpdates: true
        replacesArtifacts: true
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/search.exe
        asset_name: search-windows.exe
        asset_content_type: application/octet-stream

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Package
      run: |
        mkdir -p release
        cp target/release/search release/
    - name: Release
      uses: ncipollo/release-action@v1
      id: create_release
      with:
        artifacts: ./release/search
        artifactContentType: application/octet-stream
        allowUpdates: true
        replacesArtifacts: true
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/search
        asset_name: search-macos
        asset_content_type: application/octet-stream
